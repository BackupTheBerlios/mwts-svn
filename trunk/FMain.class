
PRIVATE $aktTag AS Integer = 1 ' tag-version to use
PRIVATE $recursive AS Boolean = FALSE ' list files recursively

STATIC PUBLIC cols AS String[] ' contains the patterns to display in Flist

'PUBLIC fall AS NEW Collection ' contains the keys (paths) of all files displayed in Flist
'PUBLIC fsel AS NEW CTag ' should contain the Tag of the selected file (not sure if everywhere possible set)
'PUBLIC fchg AS NEW Collection ' contains something, i dunno right now...

PROPERTY READ changed AS Boolean ' if something was changed on the displayed files it is remarked here
PRIVATE halt AS Boolean = FALSE ' during scanning the directories this will stop the read-in process

STATIC PUBLIC Flist AS CFView

STATIC PUBLIC SUB _exit()
  FMain.Flist = NULL
  FMain.cols = NULL
END

PUBLIC SUB _new()
  
  Flist = NEW CFView(VBox3) AS "Flist"
  'Object.Attach(Flist, ME, "Flist")
  Flist.x = 7
  Flist.y = 7
  Flist.W = 469
  Flist.h = 441
  Flist.expand = TRUE
  
  cols = Split(Settings["cols", "%f,%T,%A,%B,%Y,%G,%b"], ",")
  Flist.cols = cols
  
  ME.Center
  
END

' updates the whole Flist out of the directory selected in DirView1
PUBLIC SUB UpdFlist()
  
  DIM pass AS String[]
  DIM x AS Integer
  DIM e AS CFile
  DIM z AS Float
  
  IF ME.changed THEN 
    IF Message.Warning("You made changes to " & Str(Flist.changed.Count) & " files. Do you want to discard these changes?", "Yes", "No") = 2 THEN RETURN
  END IF
  
  INC Application.Busy
  Status.Text = "Scanning directory "
  IF $recursive THEN  
    Status.Text &= "recursively "
  END IF
  Status.Text &= "for .mp3-files"
  WAIT 0.001
  
  Flist.Clear
  FOR x = 0 TO Flist.cols.Count - 1
    'Flist.cols[x].Width = 50
  NEXT 
'  fall = NEW Collection
'  fchg = NEW Collection
  
  IF $recursive THEN 
    pass = RDir(DirView1.Current, "*.mp3").Sort(gb.Ascent AND gb.Text)
    IF pass.Count > 250 THEN
      DEC Application.Busy
      IF Message.Warning("Do you really want to display all files in this Directory recursively? This might take quite a long time...", "Yes", "No") = 2 THEN
        ToggleButton2.Value = FALSE
        RETURN
      END IF
      INC Application.Busy
    END IF
  ELSE
    pass = Dir(DirView1.Current, "*.mp3").Sort(gb.Descent AND gb.Binary)
  END IF
  z = Timer()
  ToolButton1.Enabled = TRUE
  ProgressBar1.Visible = TRUE
  FOR x = 0 TO pass.Max ' absolute paths to files in pass
    IF NOT Exist(DirView1.Current &/ pass[x]) THEN CONTINUE  
    e = NEW CFile(DirView1.Current &/ pass[x])
    Flist.Add(e)
    IF CInt((z - Timer()) * 10) MOD 5 = 0 THEN
      Status.Text = "Reading file-Tags (" & Str(x) & "/" & Str(pass.Max) & ")"
      ProgressBar1.Value = x / pass.Count
      WAIT 0.001
      IF halt THEN  
        halt = FALSE
        'ToggleButton2.Value = FALSE
        BREAK 
      END IF
    END IF
  NEXT
  
  Flist.refresh
  Status.Text = "Showing ID3v" & Str($aktTag) & "-Tag of " & Str(Flist.Count) & " files"
  ProgressBar1.Visible = FALSE
  ToolButton1.Enabled = FALSE
  DEC Application.Busy
  
END



' updates the Tag-Fields in Flist for file specified in t
PUBLIC SUB FeditEntry(t AS String, f AS Object)
  
  DIM ftag AS CTag
  DIM b AS NEW Picture
  DIM e AS NEW Picture
  
  b = Picture.Load("icons/16/blank.png")
  e = Picture.Load("icons/16/edited.png")
  
  IF (Object.Type(f) = "CFile") THEN
    ftag = f.tag
  ELSE IF (Object.Type(f) = "CTag") THEN
    ftag = f
  ELSE
    RETURN 
  END IF
  
  Flist[t][1] = ftag.title
  Flist[t][2] = ftag.artist
  Flist[t][3] = ftag.album
  IF ftag.year > 0 THEN Flist[t][4] = Str(ftag.year)
  Flist[t][5] = ftag.genre
  IF ftag.track > 0 THEN Flist[t][6] = Str(ftag.track)
  IF (Object.Type(f) = "CFile") THEN Flist[t][7] = If(f.header.bitrate = -1, "VBR", Str(f.header.bitrate))
  Flist[t].Picture = If(f.changed, e, b)
  
END

' MouseClick or other change of selected item in left DirView
PUBLIC SUB DirView1_Select()
  UpdFlist
END

' change from viewing the v1-Tag to v2-Tag or the other way round
PUBLIC SUB ToolButton2_Click()
  $aktTag = If($aktTag = 1, 2, 1)
  Flist.tag2Display = $aktTag
  ToolButton2.Text = "Showing ID3v" & $aktTag & "-Tag"
  UpdFlist
END

' get (original, not modified) path to files of all selected entries in FList 
PUBLIC FUNCTION getSelected() AS String[]
  
  DIM result AS NEW String[]
  DIM x AS Integer
  
  IF Flist.Count = 0 THEN RETURN result
  Flist.MoveFirst
  DO
    IF Flist.Item.Selected THEN result.Add(Flist.Item.Key)
    INC x
  LOOP UNTIL Flist.MoveBelow()
  Flist.MoveBack
  RETURN result
  
END

' get all Tags of version if specified (CTagv1 or CTagv2) otherwise CTag
PUBLIC FUNCTION getACTags(files AS String[], OPTIONAL version AS Integer = 0) AS Object[]
  
  DIM t AS String
  DIM x AS Integer
  DIM result AS NEW Object[]
  
  IF IsNull(files) THEN RETURN []
  
  IF version = 0 THEN 
    FOR EACH t IN files
      result.Add(Flist[t].AFile.tag)
    NEXT 
  ELSE IF version = 1 THEN 
    FOR EACH t IN files
      result.Add(FList[t].AFile.Tag.v1)
    NEXT 
  ELSE IF version = 2 THEN 
    FOR EACH t IN files
      result.Add(Flist[t].AFile.Tag.v2)
    NEXT 
  END IF
  RETURN result
  
END

' show hidden files / directories
PUBLIC SUB ToggleButton1_Click()
  DirView1.ShowHidden = ToggleButton1.Value
  UpdFlist
END
' scan directories recursively
PUBLIC SUB ToggleButton2_Click()
  $recursive = ToggleButton2.Value
  UpdFlist
END

PUBLIC SUB Flist_Menu()
  IF Flist.selected.Count > 0 THEN Menu3.Popup
END

PUBLIC SUB renameFFile(fkey AS String, newname AS String)
  
  DIM d AS String
  DIM b AS CFile = Flist[fkey].AFile
  DIM f AS Integer
  
  IF File.Name(b.path) = newname THEN RETURN 
  b.newpath = File.Dir(b.path) &/ newname &/ File.Ext(b.path)
  
  f = cols.Find("%f")
  Flist.refresh([fkey])
  
END

' Edit ID3v1-Tag of selected files
PUBLIC SUB ToolButton6_Click()

  DIM sel AS String[]
  DIM edit AS Object[]
  DIM t AS String
  'DIM fsel AS NEW CTag
  
  sel = getSelected()
  edit = getACTags(sel)
  
  'fsel.v1 = CTagv1.mergeTags(edit)
  FEditv1.v1tag = MHelp.merge(edit)
  IF IsNull(FEditv1.v1tag) THEN RETURN 
  IF FEditv1.Run() THEN 
    IF FEditv1.changed = 0 THEN RETURN 
    FOR EACH t IN sel
      IF FEditv1.changed AND FEditv1.chgAlbum THEN Flist[t].AFile.Tag.v1.album = FEditv1.v1tag.v1.album
      IF FEditv1.changed AND FEditv1.chgArtist THEN Flist[t].AFile.Tag.v1.artist = FEditv1.v1tag.v1.artist
      IF FEditv1.changed AND FEditv1.chgTitle THEN Flist[t].AFile.Tag.v1.title = FEditv1.v1tag.v1.title
      IF FEditv1.changed AND FEditv1.chgGenre THEN Flist[t].AFile.Tag.v1.genre = FEditv1.v1tag.v1.genre
      IF FEditv1.changed AND FEditv1.chgTrack THEN Flist[t].AFile.Tag.v1.track = FEditv1.v1tag.v1.track
      IF FEditv1.changed AND FEditv1.chgComment THEN Flist[t].AFile.Tag.v1.comment = FEditv1.v1tag.v1.comment
      IF FEditv1.changed AND FEditv1.chgYear THEN Flist[t].AFile.Tag.v1.year = FEditv1.v1tag.v1.year
      Message("New Tag for " & File.Name(t) & " equals the old one: " & Str(MHelp.isSame(MHelp.merge(edit), FEditv1.v1tag)))
'      fchg.Add(fall[t], t)
      FList.refresh([t])
      'FeditEntry(t, FEditv1.v1tag)
    NEXT 
  END IF

END

PRIVATE FUNCTION changed_Read() AS Boolean

  DIM t AS CFViewItem
  DIM result AS Boolean
  
  FOR EACH t IN Flist
    IF IsNull(t) THEN RETURN FALSE
    result = result OR t.AFile.changed
  NEXT 
  RETURN result

END

' Quit
PUBLIC SUB Menu2_Click()
  Form_Close
END

' show file-header
PUBLIC SUB Menu4_Click()
  
  DIM t AS String
  DIM s AS Object[]
  DIM f AS Variant
  
  s = Flist.selected
  
  IF s.Count = 0 THEN RETURN 
' if s.Count = 1 then f = s[0]
  IF s.Count > 1 THEN 
    RETURN 
    s = [MHelp.merge(s)]
  END IF
  
  f = Flist.selected[0]
  t = "Bitrate: %b" & Chr(10)
  t &= "MP3-Type: MPEG " & s[0].header.mpegversion & " Layer " & s[0].header.layer & Chr(10)
  t &= "Sample-Rate: %s" & Chr(10)
  t &= "Channels: " & Choose(s[0].header.channels + 1, "Stereo", "Joint-Stereo", "Dual-Mono", "Mono")
  Message(MHelp.replaceByPattern(t, s[0]))
  
END

PUBLIC SUB DirView1_Menu()

  DIM f AS NEW Menu(ME, TRUE)
  DIM g AS Menu
  DIM x AS String[] = ["Generate Torrent Info"]
  DIM s AS String
  DIM y AS Integer
  
  FOR EACH s IN x
    g = NEW Menu(f) AS "FMM"
    g.Text = s
    INC y
    f.Tag = y
    INC y
  NEXT
  f.Popup

END

' TODO !!!
PUBLIC SUB FMM_Click()
  SELECT CASE LAST.tag
    CASE 1 ' generate torrent-description
      Message("bla")
  END SELECT 
END


PUBLIC SUB ToolButton1_Click()
  ToolButton1.Enabled = FALSE
  halt = TRUE
END

PUBLIC SUB Menu14_Click()

  IF FConfig.Run() THEN 
    Flist.cols = FConfig.cols
    Flist.tips = Settings["tips"]
    'actFlist
  END IF

END

PUBLIC SUB Form_Close()

  Settings["cols"] = cols.Join(",")
  Settings.Save
  ME.Delete 

END
