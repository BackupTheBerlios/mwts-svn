' Gambas class file

PROPERTY v1 AS CTagv1 ' holds an instance of the ID3v1-Tag from the file, this CTag belongs to
PROPERTY v2 AS CTagv2 ' holds an instance of the ID3v2-Tag from the file, this CTag belongs to

PROPERTY artist AS String ' returns the artist-field, subjected to aktTag
PROPERTY album AS String ' returns the album-field, subjected to aktTag
PROPERTY track AS Integer ' returns the track-field, subjected to aktTag
PROPERTY year AS Integer ' returns the year-field, subjected to aktTag
PROPERTY genre AS String ' returns the genre-field, subjected to aktTag
PROPERTY title AS String ' returns the title-field, subjected to aktTag
PROPERTY comment AS String ' returns the comment-field, subjected to aktTag

' Tag to edit via the properties above
' if set to 0, both tags are edited simultaneously and returned merged on reading
PROPERTY aktTag AS Integer 
PROPERTY READ changed AS Boolean ' returns whether any of the tags has been modified
PROPERTY READ parent AS CFile

PUBLIC CONST trackNone AS Integer = 0 ' value to set for the track-field if information is unknown

PRIVATE $v1 AS CTagv1
PRIVATE $v2 AS CTagv2

PRIVATE $artist AS String
PRIVATE $album AS String
PRIVATE $track AS Integer
PRIVATE $year AS Integer
PRIVATE $genre AS String
PRIVATE $title AS String
PRIVATE $comment AS String

PRIVATE $akt AS Integer = 1
PRIVATE $changed AS Boolean
PRIVATE $parent AS CFile

' reads all supported tags
PUBLIC SUB _new(parent AS CFile, OPTIONAL path AS String = NULL)
  
  $parent = parent
  
  $v1 = NEW CTagv1(path)
  IF NOT $v1.statusOK THEN $v1 = NULL
  
  $v2 = NEW CTagv2(path)
  IF NOT $v2.statusOK THEN $v2 = NULL
  
END

' needed for MHelp.merge()
PUBLIC FUNCTION getNone(which AS String) AS Variant
  
  SELECT CASE which
    CASE "track"
      RETURN trackNone
    CASE ELSE  
      RETURN ""
  END SELECT 
  
END


PRIVATE FUNCTION v1_Read() AS CTagv1
  RETURN $v1
END
PRIVATE SUB v1_Write(Value AS CTagv1)
  $v1 = Value
  $changed = TRUE
END
PRIVATE FUNCTION v2_Read() AS CTagv2
  RETURN $v2
END
PRIVATE SUB v2_Write(Value AS CTagv2)
  $v2 = Value
  $changed = TRUE
END

PRIVATE FUNCTION artist_Read() AS String
  IF $akt = 0 THEN RETURN If($v1.artist = $v2.artist, $v1.artist, "")
  IF $akt = 1 THEN RETURN $v1.artist
  IF $akt = 2 THEN RETURN $v2.artist
END
PRIVATE SUB artist_Write(Value AS String)
  IF $akt = 1 OR $akt = 0 THEN $v1.artist = Value
  IF $akt = 2 OR $akt = 0 THEN $v2.artist = Value
  $changed = TRUE
END
PRIVATE FUNCTION album_Read() AS String
  IF $akt = 0 THEN RETURN If($v1.album = $v2.album, $v1.album, "")
  IF $akt = 1 THEN RETURN $v1.album
  IF $akt = 2 THEN RETURN $v2.album
END
PRIVATE SUB album_Write(Value AS String)
  IF $akt = 1 OR $akt = 0 THEN $v1.album = Value
  IF $akt = 2 OR $akt = 0 THEN $v2.album = Value
  $changed = TRUE
END
PRIVATE FUNCTION track_Read() AS Integer
  IF $akt = 0 THEN RETURN If($v1.track = $v2.track, $v1.track, "")
  IF $akt = 1 THEN RETURN $v1.track
  IF $akt = 2 THEN RETURN $v2.track
END
PRIVATE SUB track_Write(Value AS Integer)
  IF $akt = 1 OR $akt = 0 THEN $v1.track = Value
  IF $akt = 2 OR $akt = 0 THEN $v2.track = Value
  $changed = TRUE
END
PRIVATE FUNCTION year_Read() AS Integer
  IF $akt = 0 THEN RETURN If($v1.year = $v2.year, $v1.year, "")
  IF $akt = 1 THEN RETURN $v1.year
  IF $akt = 2 THEN RETURN $v2.year
END
PRIVATE SUB year_Write(Value AS Integer)
  IF $akt = 1 OR $akt = 0 THEN $v1.year = Value
  IF $akt = 2 OR $akt = 0 THEN $v2.year = Value
  $changed = TRUE
END
PRIVATE FUNCTION genre_Read() AS String
  IF $akt = 0 THEN RETURN If($v1.getsGenre = $v2.genre, $v2.genre, "")
  IF $akt = 1 THEN RETURN $v1.getsGenre()
  IF $akt = 2 THEN RETURN $v2.genre
END
PRIVATE SUB genre_Write(Value AS String)
  IF $akt = 1 OR $akt = 0 THEN $v1.genre = CTagv1.genreDef.Find(Value)
  IF $akt = 2 OR $akt = 0 THEN $v2.genre = Value
  $changed = TRUE
END
PRIVATE FUNCTION title_Read() AS String
  IF $akt = 0 THEN RETURN If($v1.title = $v2.title, $v1.title, "")
  IF $akt = 1 THEN RETURN $v1.title
  IF $akt = 2 THEN RETURN $v2.title
END
PRIVATE SUB title_Write(Value AS String)
  IF $akt = 1 OR $akt = 0 THEN $v1.title = Value
  IF $akt = 2 OR $akt = 0 THEN $v2.title = Value
  $changed = TRUE
END
PRIVATE FUNCTION isEmpty_Read() AS Boolean
  IF $akt = 0 THEN RETURN $v1.isEmpty AND $v2.isEmpty
  IF $akt = 1 THEN RETURN $v1.isEmpty
  IF $akt = 2 THEN RETURN $v2.isEmpty
END 
PRIVATE FUNCTION comment_Read() AS String
  IF $akt = 0 THEN RETURN If($v1.comment = $v2.comment, $v1.comment, "")
  IF $akt = 1 THEN RETURN $v1.comment
  IF $akt = 2 THEN RETURN $v2.comment
END
PRIVATE SUB comment_Write(Value AS String)
  IF $akt = 1 OR $akt = 0 THEN $v1.comment = Value
  IF $akt = 2 OR $akt = 0 THEN $v2.comment = Value
  $changed = TRUE
END
PRIVATE FUNCTION aktTag_Read() AS Integer
  RETURN $akt
END
PRIVATE SUB aktTag_Write(Value AS Integer)
  IF Value < 0 OR Value > 2 THEN RETURN 
  $akt = Value
END
PRIVATE FUNCTION changed_Read() AS Boolean
  RETURN $changed OR ($akt = 0 AND ($v1.changed OR $v2.changed)) OR ($akt = 1 AND $v1.changed) OR ($akt = 2 AND $v2.changed)
END
