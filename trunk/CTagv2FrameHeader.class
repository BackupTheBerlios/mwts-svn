
PROPERTY READ id AS String ' returns the frame-id such as TXXX, see CTagv2Frame.FTypes
PROPERTY READ size AS Integer ' returns the size of the header (always 10 bytes)
PROPERTY READ tStart AS Integer ' returns the location of the beginning of the frame-header in the tag

PROPERTY READ frameSize AS Integer ' returns the size of the frame exclusive it's header
PROPERTY READ tagAlterPreservation AS Boolean
PROPERTY READ fileAlterPreservation AS Boolean
PROPERTY READ readOnly AS Boolean ' the frame is read-only
PROPERTY READ frameGroup AS Boolean ' the frame is member of a frame-group, see GRID-frame
PROPERTY READ compressed AS Boolean
PROPERTY READ encrypted AS Boolean
PROPERTY READ unsynchronised AS Boolean ' the frame uses unsynchronisation
PROPERTY READ existsDataLengthIndicator AS Boolean

PRIVATE $data AS String
PRIVATE $tStart AS Integer
PRIVATE $statusFlags AS Byte
PRIVATE $formatFlags AS Byte

' creates a new frame-header:
' s = NULL: a standard frame header is created
' s = NULL, id = NULL: a standard X000-frame-header is created
PUBLIC SUB _new(rawData AS String, tStart AS Integer, OPTIONAL id AS String = NULL, OPTIONAL size AS Integer = 1)
  
  IF IsNull(rawData) THEN 
    IF IsNull(id) THEN id = "X000"
    IF Len(id) <> 4 THEN STOP 
    IF size = 0 THEN STOP
    $data = id
    $data &= CTagv2.Synchsafe(size, 4)
    $data &= Chr(0) & Chr(0)
  ELSE 
    $data = rawData
  END IF
  
  $tStart = tStart
  $statusFlags = CByte(Asc($data, 9))
  $formatFlags = CByte(Asc($data, 10))
  
END

PUBLIC SUB render() AS String
  RETURN $data
END

PRIVATE FUNCTION id_Read() AS String
  RETURN Left($data, 4)
END
PRIVATE FUNCTION frameSize_Read() AS Integer
  RETURN CInt(CTagv2.DeSynchsafe(Mid($data, 5, 4)))
END
PRIVATE FUNCTION tagAlterPreservation_Read() AS Boolean
  RETURN NOT BTst($statusFlags, 6)
END
PRIVATE FUNCTION fileAlterPreservation_Read() AS Boolean
  RETURN NOT BTst($statusFlags, 5)
END
PRIVATE FUNCTION readOnly_Read() AS Boolean
  RETURN BTst($statusFlags, 4)
END
PRIVATE FUNCTION frameGroup_Read() AS Boolean
  RETURN BTst($formatFlags, 6)
END
PRIVATE FUNCTION compressed_Read() AS Boolean
  RETURN BTst($formatFlags, 3)
END
PRIVATE FUNCTION encrypted_Read() AS Boolean
  RETURN BTst($formatFlags, 2)
END
PRIVATE FUNCTION unsynchronised_Read() AS Boolean
  RETURN BTst($formatFlags, 1)
END
PRIVATE FUNCTION existsDataLengthIndicator_Read() AS Boolean
  RETURN BTst($formatFlags, 0)
END
PRIVATE FUNCTION size_Read() AS Integer
  RETURN 10
END
PRIVATE FUNCTION tStart_Read() AS Integer
  RETURN $tStart
END
